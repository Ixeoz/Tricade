{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\Tricade\\\\App.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth } from './src/firebaseConfig';\nimport { useFonts, PressStart2P_400Regular } from '@expo-google-fonts/press-start-2p';\nimport AppNavigator from './src/navigation/AppNavigator';\nimport LoadingScreen from './src/views/LoadingScreen';\nimport { Audio } from 'expo-av';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var AudioContext = React.createContext({\n  audioOn: false,\n  toggleAudio: function toggleAudio() {}\n});\nexport default function App() {\n  var _useFonts = useFonts({\n      PressStart2P_400Regular: PressStart2P_400Regular\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var _useState = useState(undefined),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    audioOn = _useState4[0],\n    setAudioOn = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    sound = _useState6[0],\n    setSound = _useState6[1];\n  var webAudioRef = useRef(null);\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      try {\n        var savedAudio = yield AsyncStorage.getItem('audioOn');\n        if (savedAudio === 'true') {\n          setAudioOn(true);\n        }\n      } catch (e) {}\n    })();\n  }, []);\n  useEffect(function () {\n    var isMounted = true;\n    function playAudio() {\n      return _playAudio.apply(this, arguments);\n    }\n    function _playAudio() {\n      _playAudio = _asyncToGenerator(function* () {\n        if (audioOn) {\n          if (Platform.OS === 'web') {\n            if (!webAudioRef.current) {\n              var audio = new window.Audio(require('./src/assets/audio-game.mp3'));\n              audio.loop = true;\n              audio.volume = 0.05;\n              webAudioRef.current = audio;\n              try {\n                yield audio.play();\n              } catch (e) {}\n            } else {\n              try {\n                yield webAudioRef.current.play();\n              } catch (e) {}\n            }\n          } else if (!sound) {\n            try {\n              var _yield$Audio$Sound$cr = yield Audio.Sound.createAsync(require('./src/assets/audio-game.mp3'), {\n                  shouldPlay: true,\n                  isLooping: true,\n                  volume: 0.05\n                }),\n                newSound = _yield$Audio$Sound$cr.sound;\n              if (isMounted) setSound(newSound);\n            } catch (e) {}\n          }\n        } else {\n          if (Platform.OS === 'web' && webAudioRef.current) {\n            webAudioRef.current.pause();\n            webAudioRef.current.currentTime = 0;\n          } else if (sound) {\n            yield sound.stopAsync();\n            yield sound.unloadAsync();\n            if (isMounted) setSound(null);\n          }\n        }\n      });\n      return _playAudio.apply(this, arguments);\n    }\n    playAudio();\n    return function () {\n      isMounted = false;\n      if (Platform.OS === 'web' && webAudioRef.current) {\n        webAudioRef.current.pause();\n        webAudioRef.current = null;\n      }\n      if (sound) sound.unloadAsync();\n    };\n  }, [audioOn]);\n  var toggleAudio = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (audioOn) {\n        setAudioOn(false);\n        yield AsyncStorage.setItem('audioOn', 'false');\n      } else {\n        setAudioOn(true);\n        yield AsyncStorage.setItem('audioOn', 'true');\n      }\n    });\n    return function toggleAudio() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var unsubscribe = onAuthStateChanged(auth, function (firebaseUser) {\n      setUser(firebaseUser || null);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  if (!fontsLoaded || user === undefined) return _jsxDEV(LoadingScreen, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 50\n  }, this);\n  return _jsxDEV(AudioContext.Provider, {\n    value: {\n      audioOn: audioOn,\n      toggleAudio: toggleAudio\n    },\n    children: _jsxDEV(AppNavigator, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useEffect","useState","useRef","onAuthStateChanged","auth","useFonts","PressStart2P_400Regular","AppNavigator","LoadingScreen","Audio","AsyncStorage","Platform","jsxDEV","_jsxDEV","AudioContext","createContext","audioOn","toggleAudio","App","_useFonts","_useFonts2","_slicedToArray","fontsLoaded","_useState","undefined","_useState2","user","setUser","_useState3","_useState4","setAudioOn","_useState5","_useState6","sound","setSound","webAudioRef","_asyncToGenerator","savedAudio","getItem","e","isMounted","playAudio","_playAudio","apply","arguments","OS","current","audio","window","require","loop","volume","play","_yield$Audio$Sound$cr","Sound","createAsync","shouldPlay","isLooping","newSound","pause","currentTime","stopAsync","unloadAsync","_ref2","setItem","unsubscribe","firebaseUser","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","children"],"sources":["C:/Users/Administrator/Documents/Tricade/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { auth } from './src/firebaseConfig';\r\nimport { useFonts, PressStart2P_400Regular } from '@expo-google-fonts/press-start-2p';\r\nimport AppNavigator from './src/navigation/AppNavigator';\r\nimport LoadingScreen from './src/views/LoadingScreen';\r\nimport { Audio } from 'expo-av';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Platform } from 'react-native';\r\n\r\nexport const AudioContext = React.createContext({ audioOn: false, toggleAudio: () => {} });\r\n\r\nexport default function App() {\r\n  const [fontsLoaded] = useFonts({\r\n    PressStart2P_400Regular,\r\n  });\r\n  const [user, setUser] = useState(undefined); // undefined = loading\r\n  const [audioOn, setAudioOn] = useState(false);\r\n  const [sound, setSound] = useState(null);\r\n  const webAudioRef = useRef(null);\r\n\r\n  // Leer preferencia de audio al iniciar\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const savedAudio = await AsyncStorage.getItem('audioOn');\r\n        if (savedAudio === 'true') {\r\n          setAudioOn(true);\r\n        }\r\n      } catch (e) {}\r\n    })();\r\n  }, []);\r\n\r\n  // Manejar reproducciÃ³n global multiplataforma\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    async function playAudio() {\r\n      if (audioOn) {\r\n        if (Platform.OS === 'web') {\r\n          if (!webAudioRef.current) {\r\n            const audio = new window.Audio(require('./src/assets/audio-game.mp3'));\r\n            audio.loop = true;\r\n            audio.volume = 0.05; // volumen muy bajo\r\n            webAudioRef.current = audio;\r\n            try { await audio.play(); } catch (e) {}\r\n          } else {\r\n            try { await webAudioRef.current.play(); } catch (e) {}\r\n          }\r\n        } else if (!sound) {\r\n          try {\r\n            const { sound: newSound } = await Audio.Sound.createAsync(require('./src/assets/audio-game.mp3'), { shouldPlay: true, isLooping: true, volume: 0.05 });\r\n            if (isMounted) setSound(newSound);\r\n          } catch (e) {}\r\n        }\r\n      } else {\r\n        if (Platform.OS === 'web' && webAudioRef.current) {\r\n          webAudioRef.current.pause();\r\n          webAudioRef.current.currentTime = 0;\r\n        } else if (sound) {\r\n          await sound.stopAsync();\r\n          await sound.unloadAsync();\r\n          if (isMounted) setSound(null);\r\n        }\r\n      }\r\n    }\r\n    playAudio();\r\n    return () => {\r\n      isMounted = false;\r\n      if (Platform.OS === 'web' && webAudioRef.current) {\r\n        webAudioRef.current.pause();\r\n        webAudioRef.current = null;\r\n      }\r\n      if (sound) sound.unloadAsync();\r\n    };\r\n  }, [audioOn]);\r\n\r\n  const toggleAudio = async () => {\r\n    if (audioOn) {\r\n      setAudioOn(false);\r\n      await AsyncStorage.setItem('audioOn', 'false');\r\n    } else {\r\n      setAudioOn(true);\r\n      await AsyncStorage.setItem('audioOn', 'true');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (firebaseUser) => {\r\n      setUser(firebaseUser || null);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  if (!fontsLoaded || user === undefined) return <LoadingScreen />;\r\n  return (\r\n    <AudioContext.Provider value={{ audioOn, toggleAudio }}>\r\n      <AppNavigator user={user} />\r\n    </AudioContext.Provider>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}