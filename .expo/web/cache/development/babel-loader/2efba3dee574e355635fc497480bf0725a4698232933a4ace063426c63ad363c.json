{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\Tricade\\\\src\\\\navigation\\\\AppNavigator.js\",\n  _this = this;\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from '../views/HomeScreen';\nimport LoadingScreen from '../views/LoadingScreen';\nimport GamesScreen from '../views/GamesScreen';\nimport ProfileScreen from '../views/ProfileScreen';\nimport LoginScreen from '../views/LoginScreen';\nimport RegisterScreen from '../views/RegisterScreen';\nimport VerificationScreen from '../views/VerificationScreen';\nimport EmailValidatorScreen from '../views/EmailValidatorScreen';\nimport WaitingVerificationScreen from '../views/WaitingVerificationScreen';\nimport ResetPasswordScreen from '../views/ResetPasswordScreen';\nimport TrikiDetailScreen from '../views/TrikiDetailScreen';\nimport TrikiGameScreen from '../views/TrikiGameScreen';\nimport SnakeDetailScreen from '../views/SnakeDetailScreen';\nimport SnakeGameScreen from '../views/SnakeGameScreen';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar Stack = createStackNavigator();\nvar AppNavigator = function AppNavigator(_ref) {\n  var user = _ref.user;\n  return _jsxDEV(NavigationContainer, {\n    children: _jsxDEV(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false,\n        cardStyle: {\n          backgroundColor: '#0a0a23'\n        }\n      },\n      children: user ? _jsxDEV(_Fragment, {\n        children: [_jsxDEV(Stack.Screen, {\n          name: \"Games\",\n          component: GamesScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"Profile\",\n          component: ProfileScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"TrikiDetailScreen\",\n          component: TrikiDetailScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"TrikiGameScreen\",\n          component: TrikiGameScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"SnakeDetailScreen\",\n          component: SnakeDetailScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"SnakeGameScreen\",\n          component: SnakeGameScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true) : _jsxDEV(_Fragment, {\n        children: [_jsxDEV(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"Verification\",\n          component: VerificationScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"EmailValidator\",\n          component: EmailValidatorScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"WaitingVerification\",\n          component: WaitingVerificationScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"ResetPassword\",\n          component: ResetPasswordScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, _this);\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","HomeScreen","LoadingScreen","GamesScreen","ProfileScreen","LoginScreen","RegisterScreen","VerificationScreen","EmailValidatorScreen","WaitingVerificationScreen","ResetPasswordScreen","TrikiDetailScreen","TrikiGameScreen","SnakeDetailScreen","SnakeGameScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","Stack","AppNavigator","_ref","user","children","Navigator","screenOptions","headerShown","cardStyle","backgroundColor","Screen","name","component","fileName","_jsxFileName","lineNumber","columnNumber","_this"],"sources":["C:/Users/Administrator/Documents/Tricade/src/navigation/AppNavigator.js"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from '../views/HomeScreen';\nimport LoadingScreen from '../views/LoadingScreen';\nimport GamesScreen from '../views/GamesScreen';\nimport ProfileScreen from '../views/ProfileScreen';\nimport LoginScreen from '../views/LoginScreen';\nimport RegisterScreen from '../views/RegisterScreen';\nimport VerificationScreen from '../views/VerificationScreen';\nimport EmailValidatorScreen from '../views/EmailValidatorScreen';\nimport WaitingVerificationScreen from '../views/WaitingVerificationScreen';\nimport ResetPasswordScreen from '../views/ResetPasswordScreen';\nimport TrikiDetailScreen from '../views/TrikiDetailScreen';\nimport TrikiGameScreen from '../views/TrikiGameScreen';\nimport SnakeDetailScreen from '../views/SnakeDetailScreen';\nimport SnakeGameScreen from '../views/SnakeGameScreen';\n// import GamesScreen from '../views/GamesScreen'; // Puedes crear esta pantalla despuÃ©s\n\nconst Stack = createStackNavigator();\n\nconst AppNavigator = ({ user }) => (\n  <NavigationContainer>\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: { backgroundColor: '#0a0a23' }\n      }}\n    >\n      {user ? (\n        <>\n          <Stack.Screen name=\"Games\" component={GamesScreen} />\n          <Stack.Screen name=\"Home\" component={HomeScreen} />\n          <Stack.Screen name=\"Profile\" component={ProfileScreen} />\n          <Stack.Screen name=\"TrikiDetailScreen\" component={TrikiDetailScreen} />\n          <Stack.Screen name=\"TrikiGameScreen\" component={TrikiGameScreen} />\n          <Stack.Screen name=\"SnakeDetailScreen\" component={SnakeDetailScreen} />\n          <Stack.Screen name=\"SnakeGameScreen\" component={SnakeGameScreen} />\n        </>\n      ) : (\n        <>\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\n      <Stack.Screen name=\"Register\" component={RegisterScreen} />\n      <Stack.Screen name=\"Verification\" component={VerificationScreen} />\n      <Stack.Screen name=\"EmailValidator\" component={EmailValidatorScreen} />\n      <Stack.Screen name=\"WaitingVerification\" component={WaitingVerificationScreen} />\n          <Stack.Screen name=\"ResetPassword\" component={ResetPasswordScreen} />\n        </>\n      )}\n      {/* <Stack.Screen name=\"Games\" component={GamesScreen} /> */}\n    </Stack.Navigator>\n  </NavigationContainer>\n);\n\nexport default AppNavigator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}